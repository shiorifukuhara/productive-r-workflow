# Try some basic R calculations
1 + 1
2 * 3
# And a coding classic:
print("Hello World")
# Assign some values
cups_per_day <- 3
days <- 7
current_lesson <- "Getting started with R"
# Print what's inside
cups_per_day
current_lesson
# Use them for calculation
cups_per_day * days
# Numeric
temperature <- 21.3
class(temperature)
# Character
module <- "Foundations"
class(module)
# Logical
is_valid <- TRUE
class(is_valid)
# A vector of numbers
coffee_per_day <- c(3, 2, 4, 1)
# A vector of text
weekdays <- c("Mon", "Tue", "Wed", "Thu")
# Use a numeric vector for calculations
coffee_per_day * 2
# Create three vectors
name <- c("Alice", "Penelope", "Bob")
age <- c(25, 30, 22)
is_supporter <- c(TRUE, FALSE, TRUE)
# Combine them into a data frame
people <- data.frame(name, age, is_supporter)
# Print the data frame
people
# Access a single column
people$name
# Calculate mean value
mean(c(3, 5, 6))
# Calculate the square root
sqrt(27)
# Get the number of elements
length(c(3, 2, 4, 1))
# Combine text
paste("Hello", "world")
# Positional matching
round(123.4567, 2)
# Positional matching gone wrong
round(2, 123.4567)
# Fixed by using named matching
round(digits = 2, x = 123.4567)
double_value <- function(value) {
value * 2
}
double_value(value = 1)
double_value(value = 317)
double_value(value = c(1, 3, 5, 7))
# Install if needed
# (no need in our sandbox)
# install.packages("ggplot2")
# Load package
library(ggplot2)
install.packages("ggplot2")
# Load package
library(ggplot2)
# Now, functions and data
# from ggplot2 are available!
ggplot(mpg) +
aes(x = displ, y = hwy) +
geom_point()
mpg
install.packages("devtools")
library(devtools)
install.packages("dplyr")
install.packages("ggplot2")
install.packages("shiny")
install_github("StatsWithR/statsr")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("shiny")
install_github("StatsWithR/statsr")
# Load package
library(ggplot2)
# Now, functions and data
# from ggplot2 are available!
ggplot(mpg) +
aes(x = displ, y = hwy) +
geom_point()
library(ggplot2)
ggplot(mpg, aes(x = class, y = hwy)) +
geom_point(
alpha = .3, size = 3,
# default: draw data as it is
stat = "identity"
)
ggplot(mpg, aes(x = class, y = hwy)) +
geom_point(
size = 5,
# custom: first calculate summary (mean by default)
stat = "summary"
)
ggplot(mpg, aes(y = class)) +
geom_bar(
# default transformation:
# calculate counts per group
stat = "count"
)
ggplot(mpg, aes(y = class)) +
stat_count(
# default geometry:
# draw a bar per group
geom = "bar",
# these arguments are ignored until
# you change the geom to point
shape = "ðŸš—",
size = 10
)
setwd("~/perso/tmp/project/penguins")
data <- read.csv("https://raw.githubusercontent.com/holtzy/R-graph-gallery/master/DATA/data_2.csv")
summary(data)
print(round(mean(subset(na.omit(data), species == "Adelie" & island == "Torgersen")$bill_length_mm),2))
print(round(mean(subset(na.omit(data), species == "Adelie" & island == "Biscoe")$bill_length_mm),2))
print(round(mean(subset(na.omit(data), species == "Adelie" & island == "Dream")$bill_length_mm),2))
# Plot
penguins_clean <- na.omit(   data  )
plot(penguins_clean$bill_length_mm, penguins_clean$bill_depth_mm, type='n', xlab='Bill Length (mm)', ylab='Bill Depth (mm)', main='Penguin Bill Dimensions')
points(
penguins_clean$bill_length_mm[penguins_clean$species  ==  "Adelie"], penguins_clean$bill_depth_mm[penguins_clean$species == "Adelie"], col='red', pch=16)
points(penguins_clean$bill_length_mm[penguins_clean$species == "Chinstrap"], penguins_clean$bill_depth_mm[penguins_clean$species == "Chinstrap"], col='green', pch=17)
points(penguins_clean$bill_length_mm[penguins_clean$species == "Gentoo"],
penguins_clean$bill_depth_mm[penguins_clean$species == "Gentoo"], col='blue', pch=18)
legend("topright", legend=unique(penguins_clean$species),
col=c('red'
, 'green',
'blue'), pch=c(16, 17, 18))
round(mean(subset(na.omit(data), species == "Adelie")$bill_length_mm),2)
data %>%
filter(!is.na(bill_length_mm), species == "Adelie") %>%
summarise(mean_bill_length = mean(bill_length_mm)) %>%
pull(mean_bill_length) %>%
round(2)
library(tidyverse)
data %>%
filter(!is.na(bill_length_mm), species == "Adelie") %>%
summarise(mean_bill_length = mean(bill_length_mm)) %>%
pull(mean_bill_length) %>%
round(2)
data %>%
filter(!is.na(bill_length_mm), species == "Adelie") %>%
summarise(mean_bill_length = mean(bill_length_mm)) %>%
pull(mean_bill_length) %>%
round(2)
library(tidyverse)
setwd("~/perso/tmp/project/penguins")
# Summary
summary(data)
# Plot using ggplot2
data %>% na.omit() %>%
ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = species, shape = species)) +
geom_point() +
labs(x = 'Bill Length (mm)', y = 'Bill Depth (mm)', title = 'Penguin Bill Dimensions') +
scale_shape_manual(values = c("Adelie" = 16, "Chinstrap" = 17, "Gentoo" = 18))
# Plot using ggplot2
data %>% na.omit() %>%
ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = species, shape = species)) +
geom_point() +
labs(x = 'Bill Length (mm)', y = 'Bill Depth (mm)', title = 'Penguin Bill Dimensions') +
scale_shape_manual(values = c("Adelie" = 16, "Chinstrap" = 17, "Gentoo" = 18))
# Calculating mean bill length for different species and islands using dplyr
data %>%
filter(species == "Adelie") %>%
group_by(island) %>%
summarize(mean_bill_length = num(mean(bill_length_mm, na.rm = TRUE), digits=2))
# Calculating mean bill length for different species and islands using dplyr
data %>%
filter(species == "Adelie") %>%
group_by(island) %>%
summarize(mean_bill_length = num(mean(bill_length_mm, na.rm = TRUE), digits=2))
library(tidyverse)
install.packages(dplyr)
install.packages("tidyverse")
install.packages("ggplot2")
library(tidyverse)
data %>%
filter(!is.na(bill_length_mm), species == "Adelie") %>%
summarise(mean_bill_length = mean(bill_length_mm)) %>%
pull(mean_bill_length) %>%
round(2)
setwd("~/perso/tmp/project/penguins")
# Summary
summary(data)
# Plot using ggplot2
data %>% na.omit() %>%
ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = species, shape = species)) +
geom_point() +
labs(x = 'Bill Length (mm)', y = 'Bill Depth (mm)', title = 'Penguin Bill Dimensions') +
scale_shape_manual(values = c("Adelie" = 16, "Chinstrap" = 17, "Gentoo" = 18))
clean_data <- data %>%
rename(ID = 1, Name = 2, Age = 3) %>%
mutate(Age = ifelse(Age < 0, NA, Age)) %>%
drop_na() %>%
mutate(Age = as.integer(Age)) %>%
select(-Name)
clean_data <- data %>%
rename(ID = 1, Name = 2, Age = 3) %>%
mutate(Age = ifelse(Age < 0, NA, Age)) %>%
drop_na() %>%
mutate(Age = as.integer(Age)) %>%
select(-Name)
install.packages("styler")
styler:::style_active_file()
styler:::style_active_file()
setwd("~/perso/tmp/project/penguins")
destfile <- "data.csv"
download.file(data)
destfile <- "C:\Users\shior\OneDrive\Desktop\productive-r-workflow\input"
destfile <- "C:\Users\shior\OneDrive\Desktop\productive-r-workflow\input"
destfile <- "C:\Users\shior\OneDrive\Desktop\productive-r-workflow\input"
setwd("~/perso/tmp/project/penguins")
data <- read.csv("https://raw.githubusercontent.com/holtzy/R-graph-gallery/master/DATA/data_2.csv")
destfile <- "C:\Users\shior\OneDrive\Desktop\productive-r-workflow\input"
download.file(data, destfile)
data <- "https://raw.githubusercontent.com/holtzy/R-graph-gallery/master/DATA/data_2.csv"
destfile <- "C:\Users\shior\OneDrive\Desktop\productive-r-workflow\input"
destfile <- "C:/Users/shior/OneDrive/Desktop/productive-r-workflow/input"
download.file(data, destfile)
destfile <- "C:/Users/shior/OneDrive/Desktop/productive-r-workflow/input"
destfile <- "C:/Users/shior/OneDrive/Desktop/productive-r-workflow/input"
data <- read.csv("https://raw.githubusercontent.com/holtzy/R-graph-gallery/master/DATA/data_2.csv")
destfile <- "C:/Users/shior/OneDrive/Desktop/productive-r-workflow/input"
download.file(data, destfile)
data <- "https://raw.githubusercontent.com/holtzy/R-graph-gallery/master/DATA/data_2.csv"
destfile <- "C:/Users/shior/OneDrive/Desktop/productive-r-workflow/input"
download.file(data, destfile)
data <- "data.csv"
summary(data)
data <- readr::read_csv("input/data.csv")
data <- readr::read_csv(""C:/Users/shior/OneDrive/Desktop/productive-r-workflow/input/data.csv"")
data <- readr::read_csv("C:/Users/shior/OneDrive/Desktop/productive-r-workflow/input/data.csv")
summary(data)
getwd()
install.packages(c("patchwork","dplyr","ggplot2","palmerpenguins"),
repos = "https://cloud.r-project.org")
library(tidyverse)
# Source functions
source(file="functions.R")
# Read the clean dataset
data <- readRDS(file = "C:/Users/shior/OneDrive/Desktop/productive-r-workflow/input/clean_data.rds")
library(dplyr)
library(ggplot2)
species_colors <- c(
"Adelie"    = "#1b9e77",
"Chinstrap" = "#d95f02",
"Gentoo"    = "#7570b3"
)
create_scatterplot <- function(data, selected_species, selected_island, show_legend = TRUE) {
# Filter the data for the specified species and island
filtered_data <- data %>%
na.omit() %>%
filter(species == selected_species, island == selected_island)
# Create the scatterplot
plot <- ggplot(
filtered_data,
aes(x = bill_length_mm, y = bill_depth_mm, color = species)
) +
geom_point() +
scale_color_manual(values = species_colors) +
labs(
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
title = paste("Penguin Bill Dimensions â€” All Islands", color = "Species")
) +
theme_minimal(base_size = 12) +
theme(legend.position = if (show_legend) "right" else "none")
return(plot)
}
# Use the function
create_scatterplot(data, c("Adelie","Chinstrap", "Gentoo"), c("Torgersen","Dream", "Biscoe"))
#Compute the average bill length and bill depth per species
#| layout-ncol: 2
library(dplyr)
data %>%
group_by(species) %>%
summarise(average_bill_length = mean(bill_length_mm, na.rm = TRUE),   average_bill_depth = mean(bill_depth_mm, na.rm = TRUE))
library(patchwork)
library(ggplot2)
p1 <- create_scatterplot(data, "Adelie", c("Torgersen","Dream", "Biscoe"), show_legend = FALSE) + labs(title = NULL)
p2 <- create_scatterplot(data, "Chinstrap", c("Torgersen","Dream", "Biscoe"), show_legend = FALSE) + labs(title = NULL)
p3 <- create_scatterplot(data, "Gentoo", c("Torgersen","Dream", "Biscoe"), show_legend = FALSE) + labs(title = NULL)
p1 + p2 + p3 + plot_annotation(title = "Penguin Bill Dimensions by Species")
library(patchwork)
library(ggplot2)
p1 <- create_scatterplot(data, "Adelie", c("Torgersen","Dream", "Biscoe"), show_legend = FALSE) + labs(title = NULL)
library(dplyr)
library(ggplot2)
species_colors <- c(
"Adelie"    = "#1b9e77",
"Chinstrap" = "#d95f02",
"Gentoo"    = "#7570b3"
)
create_scatterplot <- function(data, selected_species, selected_island, show_legend = TRUE) {
# Filter the data for the specified species and island
filtered_data <- data %>%
na.omit() %>%
filter(species == selected_species, island == selected_island)
# Create the scatterplot
plot <- ggplot(
filtered_data,
aes(x = bill_length_mm, y = bill_depth_mm, color = species)
) +
geom_point() +
scale_color_manual(values = species_colors) +
labs(
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
title = paste("Penguin Bill Dimensions â€” All Islands", color = "Species")
) +
theme_minimal(base_size = 12) +
theme(legend.position = if (show_legend) "right" else "none")
return(plot)
}
# Use the function
create_scatterplot(data, c("Adelie","Chinstrap", "Gentoo"), c("Torgersen","Dream", "Biscoe"))
#Compute the average bill length and bill depth per species
#| layout-ncol: 2
library(dplyr)
data %>%
group_by(species) %>%
summarise(average_bill_length = mean(bill_length_mm, na.rm = TRUE),   average_bill_depth = mean(bill_depth_mm, na.rm = TRUE))
library(patchwork)
library(ggplot2)
p1 <- create_scatterplot(data, "Adelie", c("Torgersen","Dream", "Biscoe"), show_legend = FALSE) + labs(title = NULL)
p2 <- create_scatterplot(data, "Chinstrap", c("Torgersen","Dream", "Biscoe"), show_legend = FALSE) + labs(title = NULL)
p3 <- create_scatterplot(data, "Gentoo", c("Torgersen","Dream", "Biscoe"), show_legend = FALSE) + labs(title = NULL)
p1 + p2 + p3 + plot_annotation(title = "Penguin Bill Dimensions by Species")
